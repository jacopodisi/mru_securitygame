
Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 09:38:45 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 09:40:54 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 09:47:26 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 09:48:17 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:16:52 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:17:02 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:17:24 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:17:53 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter PoolSearchMode to 2
   Prev: 0  Min: 0  Max: 2  Default: 0
Changed value of parameter PoolSolutions to 6
   Prev: 10  Min: 1  Max: 2000000000  Default: 10
Changed value of parameter PoolGap to 0.0
   Prev: 1e+100  Min: 0.0  Max: 1e+100  Default: 1e+100
Changed value of parameter Presolve to 0
   Prev: -1  Min: -1  Max: 2  Default: -1
Changed value of parameter Threads to 1
   Prev: 0  Min: 0  Max: 1024  Default: 0
Optimize a model with 10 rows, 4 columns and 20 nonzeros
Variable types: 0 continuous, 4 integer (4 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Found heuristic solution: objective 2
Variable types: 0 continuous, 4 integer (4 binary)

Root relaxation: objective 2.000000e+00, 3 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0          -    0         2.00000    2.00000  0.00%     -    0s
Optimal solution found at node 0 - now completing solution pool...
     0     0          -    0         2.00000    2.00000  0.00%     -    0s
     0     0          -    0         2.00000    2.00000  0.00%     -    0s
     0     2          -    0         2.00000    2.00000  0.00%     -    0s

Explored 11 nodes (4 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 2 2 
No other solutions better than 1e+100

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0000%
Parameter SolutionNumber unchanged
   Value: 0  Min: 0  Max: 2000000000  Default: 0
Changed value of parameter SolutionNumber to 1
   Prev: 0  Min: 0  Max: 2000000000  Default: 0
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter PoolSearchMode to 2
   Prev: 0  Min: 0  Max: 2  Default: 0
Changed value of parameter PoolSolutions to 6
   Prev: 10  Min: 1  Max: 2000000000  Default: 10
Changed value of parameter PoolGap to 0.0
   Prev: 1e+100  Min: 0.0  Max: 1e+100  Default: 1e+100
Changed value of parameter Presolve to 0
   Prev: -1  Min: -1  Max: 2  Default: -1
Changed value of parameter Threads to 1
   Prev: 0  Min: 0  Max: 1024  Default: 0
Optimize a model with 11 rows, 4 columns and 24 nonzeros
Variable types: 0 continuous, 4 integer (4 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 3e+00]
Found heuristic solution: objective 0
Variable types: 0 continuous, 4 integer (4 binary)

Root relaxation: objective 0.000000e+00, 4 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0          -    0         0.00000    0.00000  0.00%     -    0s
Optimal solution found at node 0 - now completing solution pool...
     0     0          -    0         0.00000    0.00000  0.00%     -    0s
     0     0          -    0         0.00000    0.00000  0.00%     -    0s
     0     2          -    0         0.00000    0.00000  0.00%     -    0s

Explored 7 nodes (4 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 4: 0 0 0 0 
No other solutions better than 1e+100

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%
Parameter SolutionNumber unchanged
   Value: 0  Min: 0  Max: 2000000000  Default: 0
Changed value of parameter SolutionNumber to 1
   Prev: 0  Min: 0  Max: 2000000000  Default: 0
Changed value of parameter SolutionNumber to 2
   Prev: 1  Min: 0  Max: 2000000000  Default: 0
Changed value of parameter SolutionNumber to 3
   Prev: 2  Min: 0  Max: 2000000000  Default: 0

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:53:51 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:54:08 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:55:36 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:56:54 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:58:40 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 10:59:38 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:15:33 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:16:02 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:16:17 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:16:33 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:16:43 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:16:54 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:17:04 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:41:53 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:42:10 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:42:28 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:58:39 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 11:59:39 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:00:26 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:02:09 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:03:52 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:06:48 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:07:27 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:08:41 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:09:40 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:10:10 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 12:11:00 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 14:41:50 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 14:45:20 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:21:17 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:21:44 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:29:08 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:30:12 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:32:44 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter PoolSearchMode to 2
   Prev: 0  Min: 0  Max: 2  Default: 0
Changed value of parameter PoolSolutions to 6
   Prev: 10  Min: 1  Max: 2000000000  Default: 10
Changed value of parameter PoolGap to 0.0
   Prev: 1e+100  Min: 0.0  Max: 1e+100  Default: 1e+100
Changed value of parameter Presolve to 0
   Prev: -1  Min: -1  Max: 2  Default: -1
Changed value of parameter Threads to 1
   Prev: 0  Min: 0  Max: 1024  Default: 0
Optimize a model with 10 rows, 4 columns and 18 nonzeros
Variable types: 0 continuous, 4 integer (4 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:36:28 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:36:39 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:36:54 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:37:33 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:39:05 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:46:46 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:48:15 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:48:35 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:50:05 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:50:37 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:50:58 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:51:06 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 15:54:12 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 17:50:13 2017

Academic license - for non-commercial use only

Gurobi 7.5.1 (mac64, Python) logging started Fri Dec 15 17:50:29 2017

Academic license - for non-commercial use only
